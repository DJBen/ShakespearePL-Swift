Lexeme(ShakespeareKit.Token.Lexemes.Other("Outputting"))
Lexeme(ShakespeareKit.Token.Lexemes.Other("Input"))
Lexeme(ShakespeareKit.Token.Lexemes.Other("Reversedly"))
Lexeme(ShakespeareKit.Token.Lexemes.Punctuation)
Lexeme(ShakespeareKit.Token.Lexemes.Character("Othello"))
Other(",")
Lexeme(ShakespeareKit.Token.Lexemes.Other("stacky"))
Lexeme(ShakespeareKit.Token.Lexemes.Other("man"))
Lexeme(ShakespeareKit.Token.Lexemes.Punctuation)
Lexeme(ShakespeareKit.Token.Lexemes.Character("Lady Macbeth"))
Other(",")
Lexeme(ShakespeareKit.Token.Lexemes.Other("who"))
Lexeme(ShakespeareKit.Token.Lexemes.Other("pushes"))
Lexeme(ShakespeareKit.Token.Lexemes.Other("him"))
Lexeme(ShakespeareKit.Token.Lexemes.Other("around"))
Lexeme(ShakespeareKit.Token.Lexemes.Other("till"))
Lexeme(ShakespeareKit.Token.Lexemes.Other("he"))
Lexeme(ShakespeareKit.Token.Lexemes.Other("pops"))
Lexeme(ShakespeareKit.Token.Lexemes.Punctuation)
Act("I", "The one and only.")
Scene("I", "In the beginning, there was nothing.")
Enter(Set(["Lady Macbeth", "Othello"]))
Speaking("Othello")
Lexeme(ShakespeareKit.Token.Lexemes.SecondPerson)
Lexeme(ShakespeareKit.Token.Lexemes.Be)
Lexeme(ShakespeareKit.Token.Lexemes.Other("nothing"))
Lexeme(ShakespeareKit.Token.Lexemes.Punctuation)
Scene("II", "Pushing to the very end.")
Speaking("Lady Macbeth")
ScanCharacter
PushStack
Speaking("Othello")
Lexeme(ShakespeareKit.Token.Lexemes.SecondPerson)
Lexeme(ShakespeareKit.Token.Lexemes.Be)
Lexeme(ShakespeareKit.Token.Lexemes.Compare(ShakespeareKit.Token.Lexemes.ComparisonType.Equals))
Lexeme(ShakespeareKit.Token.Lexemes.BinaryOperation(ShakespeareKit.Token.Lexemes.BinaryOperationType.Add))
Lexeme(ShakespeareKit.Token.Lexemes.SecondPersonReflexive)
Lexeme(ShakespeareKit.Token.Lexemes.Conjunction)
Lexeme(ShakespeareKit.Token.Lexemes.Other("stone"))
Lexeme(ShakespeareKit.Token.Lexemes.Other("wall"))
Lexeme(ShakespeareKit.Token.Lexemes.Punctuation)
Lexeme(ShakespeareKit.Token.Lexemes.Be)
Lexeme(ShakespeareKit.Token.Lexemes.FirstPerson)
Lexeme(ShakespeareKit.Token.Lexemes.Compare(ShakespeareKit.Token.Lexemes.ComparisonType.Equals))
Lexeme(ShakespeareKit.Token.Lexemes.Other("flirt-gill"))
Lexeme(ShakespeareKit.Token.Lexemes.Punctuation)
Speaking("Lady Macbeth")
ConditionalJump(false, "II")
PopStack
Speaking("Othello")
Lexeme(ShakespeareKit.Token.Lexemes.SecondPerson)
Lexeme(ShakespeareKit.Token.Lexemes.Be)
Lexeme(ShakespeareKit.Token.Lexemes.Compare(ShakespeareKit.Token.Lexemes.ComparisonType.Equals))
Lexeme(ShakespeareKit.Token.Lexemes.BinaryOperation(ShakespeareKit.Token.Lexemes.BinaryOperationType.Subtract))
Lexeme(ShakespeareKit.Token.Lexemes.SecondPersonReflexive)
Lexeme(ShakespeareKit.Token.Lexemes.Conjunction)
Lexeme(ShakespeareKit.Token.Lexemes.Other("hair"))
Lexeme(ShakespeareKit.Token.Lexemes.Punctuation)
Scene("III", "Once you pop, you can\'t stop!")
Speaking("Lady Macbeth")
PopStack
Speaking("Othello")
Lexeme(ShakespeareKit.Token.Lexemes.SecondPerson)
Lexeme(ShakespeareKit.Token.Lexemes.Be)
Lexeme(ShakespeareKit.Token.Lexemes.Compare(ShakespeareKit.Token.Lexemes.ComparisonType.Equals))
Lexeme(ShakespeareKit.Token.Lexemes.BinaryOperation(ShakespeareKit.Token.Lexemes.BinaryOperationType.Add))
Lexeme(ShakespeareKit.Token.Lexemes.SecondPersonReflexive)
Lexeme(ShakespeareKit.Token.Lexemes.Conjunction)
Lexeme(ShakespeareKit.Token.Lexemes.Other("toad"))
Lexeme(ShakespeareKit.Token.Lexemes.Punctuation)
Lexeme(ShakespeareKit.Token.Lexemes.Be)
Lexeme(ShakespeareKit.Token.Lexemes.SecondPerson)
Lexeme(ShakespeareKit.Token.Lexemes.Compare(ShakespeareKit.Token.Lexemes.ComparisonType.GreaterThan))
Lexeme(ShakespeareKit.Token.Lexemes.Other("nothing"))
Lexeme(ShakespeareKit.Token.Lexemes.Punctuation)
Speaking("Lady Macbeth")
ConditionalJump(true, "III")
Scene("IV", "The end.")
Exit(Set([]))